spring:
  datasource:
    # Prefer using environment variables for sensitive data like username/password
    url: ${SPRING_DATASOURCE_URL:jdbc:oracle:thin:@//localhost:1521/XE} # Example URL, adjust host/port/service
    driver-class-name: oracle.jdbc.OracleDriver
    username: ${DB_USERNAME:your_oracle_user} 
    password: ${DB_PASSWORD:your_oracle_password}
    hikari:
      # Adjust pool size for Oracle performance
      maximum-pool-size: ${HIKARI_MAX_POOL_SIZE:10}
      minimum-idle: ${HIKARI_MIN_IDLE:2}
      idle-timeout: 300000
      connection-timeout: 30000 # Increased slightly
      max-lifetime: 1800000 # Increased slightly
      # auto-commit: true # Default for Hikari, let Spring manage transactions
      pool-name: OracleHikariCP-Prod
      validation-timeout: 5000
      leak-detection-threshold: 60000
  jpa:
    # Explicitly set Oracle dialect
    database-platform: org.hibernate.dialect.OracleDialect
    hibernate:
      # Use 'validate' or 'none' in production if schema is managed manually/differently
      # Using 'update' is risky in prod as it can lead to data loss on schema mismatch
      ddl-auto: validate # Changed from 'update' for production safety
    show-sql: false # Keep false in prod unless debugging
    properties:
      hibernate:
        # Removed SQLite specific properties
        jdbc:
          batch_size: 30
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        generate_statistics: false # Keep false unless needed for performance tuning
        format_sql: false # Keep false in prod unless debugging

logging:
  level:
    com.example: INFO # Less verbose logging for prod
    org.hibernate.SQL: WARN # Only log SQL warnings/errors in prod 