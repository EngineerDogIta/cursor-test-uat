{
  "timestamp" : "2025-03-21 00:00:10.025",
  "level" : "INFO",
  "thread" : "background-preinit",
  "logger" : "org.hibernate.validator.internal.util.Version",
  "message" : "HV000001: Hibernate Validator 8.0.1.Final",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:10.043",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.example.TestGenerationIntegrationTest",
  "message" : "Starting TestGenerationIntegrationTest using Java 23.0.2 with PID 56406 (started by yari in /Users/yari/git/cursor-test-uat)",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:10.044",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "com.example.TestGenerationIntegrationTest",
  "message" : "Running with Spring Boot v3.2.3, Spring v6.1.4",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:10.045",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.example.TestGenerationIntegrationTest",
  "message" : "No active profile set, falling back to 1 default profile: \"default\"",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:10.447",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data JPA repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:10.521",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 69 ms. Found 5 JPA repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:10.775",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:10.996",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.pool.HikariPool",
  "message" : "HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@5dae5a70",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:10.997",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:11.043",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.flywaydb.core.internal.license.VersionPrinter",
  "message" : "Flyway Community Edition 9.22.3 by Redgate",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:11.044",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.flywaydb.core.internal.license.VersionPrinter",
  "message" : "See release notes here: https://rd.gt/416ObMi",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:11.044",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.flywaydb.core.internal.license.VersionPrinter",
  "message" : "",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:11.050",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.flywaydb.core.FlywayExecutor",
  "message" : "Database: jdbc:sqlite:test_generation.db (SQLite 3.36)",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:11.065",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.flywaydb.core.internal.command.DbValidate",
  "message" : "Successfully validated 1 migration (execution time 00:00.006s)",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:11.068",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.flywaydb.core.internal.command.DbMigrate",
  "message" : "Current version of schema \"main\": 1",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:11.070",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.flywaydb.core.internal.command.DbMigrate",
  "message" : "Schema \"main\" is up to date. No migration necessary.",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:11.108",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [name: default]",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:11.136",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate ORM core version 6.4.4.Final",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:11.157",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cache.internal.RegionFactoryInitiator",
  "message" : "HHH000026: Second-level cache disabled",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:11.277",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo",
  "message" : "No LoadTimeWeaver setup: ignoring JPA class transformer",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:11.788",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator",
  "message" : "HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:11.802",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.hibernate.SQL",
  "message" : "\n    alter table test_generation_jobs \n       add column components varchar(255)",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:11.806",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.135",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.example.controller.TestGenerationController",
  "message" : "TestGenerationController initialized with TestGenerationService",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.242",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.459",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.test.mock.web.SpringBootMockServletContext",
  "message" : "Initializing Spring TestDispatcherServlet ''",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.460",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.test.web.servlet.TestDispatcherServlet",
  "message" : "Initializing Servlet ''",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.461",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.test.web.servlet.TestDispatcherServlet",
  "message" : "Completed initialization in 0 ms",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.491",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.example.TestGenerationIntegrationTest",
  "message" : "Started TestGenerationIntegrationTest in 2.719 seconds (process running for 3.207)",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.881",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.example.controller.TestGenerationController",
  "message" : "Starting asynchronous test generation for ticket:  with jobId: f9c06d15-ee08-4ad6-b2b1-460310c76001",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.903",
  "level" : "DEBUG",
  "thread" : "TestGeneration-1",
  "logger" : "org.hibernate.SQL",
  "message" : "\n    /* insert for\n        com.example.model.GenerationJob */insert \n    into\n        generation_job (created_at, generated_test_id, status, ticket_content_id, timestamp, uid, updated_at) \n    values\n        (?, ?, ?, ?, ?, ?, ?)",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.907",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.example.controller.TestGenerationController",
  "message" : "Starting asynchronous test generation for ticket: PROJ-123 with jobId: 8d6db53b-00fb-4cb8-b96c-b3a03740bfd1",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.907",
  "level" : "DEBUG",
  "thread" : "TestGeneration-1",
  "logger" : "org.hibernate.SQL",
  "message" : "\n    select\n        last_insert_rowid()",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.909",
  "level" : "DEBUG",
  "thread" : "TestGeneration-2",
  "logger" : "org.hibernate.SQL",
  "message" : "\n    /* insert for\n        com.example.model.GenerationJob */insert \n    into\n        generation_job (created_at, generated_test_id, status, ticket_content_id, timestamp, uid, updated_at) \n    values\n        (?, ?, ?, ?, ?, ?, ?)",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.919",
  "level" : "DEBUG",
  "thread" : "TestGeneration-2",
  "logger" : "org.hibernate.SQL",
  "message" : "\n    select\n        last_insert_rowid()",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.928",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.example.controller.TestGenerationController",
  "message" : "Checking status for jobId: 8d6db53b-00fb-4cb8-b96c-b3a03740bfd1",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.934",
  "level" : "DEBUG",
  "thread" : "TestGeneration-1",
  "logger" : "org.hibernate.SQL",
  "message" : "\n    select\n        gj1_0.id,\n        gj1_0.created_at,\n        gt1_0.id,\n        gt1_0.attempts,\n        gt1_0.created_at,\n        gt1_0.test_content,\n        gt1_0.uid,\n        gt1_0.updated_at,\n        gt1_0.validated,\n        gj1_0.status,\n        tc1_0.id,\n        tc1_0.content,\n        tc1_0.created_at,\n        tc1_0.uid,\n        tc1_0.updated_at,\n        gj1_0.timestamp,\n        gj1_0.uid,\n        gj1_0.updated_at \n    from\n        generation_job gj1_0 \n    left join\n        generated_test gt1_0 \n            on gt1_0.id=gj1_0.generated_test_id \n    left join\n        ticket_content tc1_0 \n            on tc1_0.id=gj1_0.ticket_content_id \n    where\n        gj1_0.id=?",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.934",
  "level" : "DEBUG",
  "thread" : "TestGeneration-2",
  "logger" : "org.hibernate.SQL",
  "message" : "\n    select\n        gj1_0.id,\n        gj1_0.created_at,\n        gt1_0.id,\n        gt1_0.attempts,\n        gt1_0.created_at,\n        gt1_0.test_content,\n        gt1_0.uid,\n        gt1_0.updated_at,\n        gt1_0.validated,\n        gj1_0.status,\n        tc1_0.id,\n        tc1_0.content,\n        tc1_0.created_at,\n        tc1_0.uid,\n        tc1_0.updated_at,\n        gj1_0.timestamp,\n        gj1_0.uid,\n        gj1_0.updated_at \n    from\n        generation_job gj1_0 \n    left join\n        generated_test gt1_0 \n            on gt1_0.id=gj1_0.generated_test_id \n    left join\n        ticket_content tc1_0 \n            on tc1_0.id=gj1_0.ticket_content_id \n    where\n        gj1_0.id=?",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.938",
  "level" : "DEBUG",
  "thread" : "TestGeneration-2",
  "logger" : "org.hibernate.SQL",
  "message" : "\n    /* insert for\n        com.example.model.TicketContent */insert \n    into\n        ticket_content (content, created_at, uid, updated_at) \n    values\n        (?, ?, ?, ?)",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.938",
  "level" : "DEBUG",
  "thread" : "TestGeneration-1",
  "logger" : "org.hibernate.SQL",
  "message" : "\n    /* insert for\n        com.example.model.TicketContent */insert \n    into\n        ticket_content (content, created_at, uid, updated_at) \n    values\n        (?, ?, ?, ?)",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.939",
  "level" : "DEBUG",
  "thread" : "TestGeneration-2",
  "logger" : "org.hibernate.SQL",
  "message" : "\n    select\n        last_insert_rowid()",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.941",
  "level" : "WARN",
  "thread" : "TestGeneration-1",
  "logger" : "org.hibernate.engine.jdbc.spi.SqlExceptionHelper",
  "message" : "SQL Error: 5, SQLState: null",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.941",
  "level" : "ERROR",
  "thread" : "TestGeneration-1",
  "logger" : "org.hibernate.engine.jdbc.spi.SqlExceptionHelper",
  "message" : "[SQLITE_BUSY]  The database file is locked (database is locked)",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.944",
  "level" : "DEBUG",
  "thread" : "TestGeneration-2",
  "logger" : "org.hibernate.SQL",
  "message" : "\n    /* update\n        for com.example.model.GenerationJob */update generation_job \n    set\n        created_at=?,\n        generated_test_id=?,\n        status=?,\n        ticket_content_id=?,\n        timestamp=?,\n        uid=?,\n        updated_at=? \n    where\n        id=?",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.945",
  "level" : "ERROR",
  "thread" : "TestGeneration-1",
  "logger" : "org.springframework.aop.interceptor.SimpleAsyncUncaughtExceptionHandler",
  "message" : "Unexpected exception occurred invoking async method: public void com.example.service.TestGenerationService.startTestGeneration(java.lang.String,com.example.dto.TicketContentDto)",
  "context" : "default",
  "exception" : "org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_BUSY]  The database file is locked (database is locked)] [/* insert for com.example.model.TicketContent */insert into ticket_content (content,created_at,uid,updated_at) values (?,?,?,?)]; SQL [/* insert for com.example.model.TicketContent */insert into ticket_content (content,created_at,uid,updated_at) values (?,?,?,?)]\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:283)\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)\n\tat org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)\n\tat org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)\n\tat jdk.proxy2/jdk.proxy2.$Proxy137.save(Unknown Source)\n\tat com.example.service.TestGenerationService.startTestGeneration(TestGenerationService.java:68)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)\n\tat org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:113)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\nCaused by: org.hibernate.exception.LockAcquisitionException: could not execute statement [[SQLITE_BUSY]  The database file is locked (database is locked)] [/* insert for com.example.model.TicketContent */insert into ticket_content (content,created_at,uid,updated_at) values (?,?,?,?)]\n\tat org.hibernate.community.dialect.SQLiteDialect.lambda$buildSQLExceptionConversionDelegate$1(SQLiteDialect.java:477)\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)\n\tat org.hibernate.id.insert.AbstractSelectingDelegate.performInsert(AbstractSelectingDelegate.java:77)\n\tat org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)\n\tat org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)\n\tat org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)\n\tat org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)\n\tat org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)\n\tat org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)\n\tat org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)\n\tat org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)\n\tat org.hibernate.event.internal.DefaultMergeEventListener.saveTransientEntity(DefaultMergeEventListener.java:378)\n\tat org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:298)\n\tat org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:211)\n\tat org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:146)\n\tat org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:130)\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138)\n\tat org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:868)\n\tat org.hibernate.internal.SessionImpl.merge(SessionImpl.java:839)\n\tat org.hibernate.engine.spi.CascadingActions$6.cascade(CascadingActions.java:253)\n\tat org.hibernate.engine.spi.CascadingActions$6.cascade(CascadingActions.java:243)\n\tat org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:517)\n\tat org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:439)\n\tat org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:224)\n\tat org.hibernate.engine.internal.Cascade.cascade(Cascade.java:157)\n\tat org.hibernate.event.internal.DefaultMergeEventListener.cascadeOnMerge(DefaultMergeEventListener.java:644)\n\tat org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:426)\n\tat org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:208)\n\tat org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:146)\n\tat org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:130)\n\tat org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:84)\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)\n\tat org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:847)\n\tat org.hibernate.internal.SessionImpl.merge(SessionImpl.java:833)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)\n\tat jdk.proxy2/jdk.proxy2.$Proxy133.merge(Unknown Source)\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:621)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)\n\t... 19 common frames omitted\nCaused by: org.sqlite.SQLiteException: [SQLITE_BUSY]  The database file is locked (database is locked)\n\tat org.sqlite.core.DB.newSQLException(DB.java:1030)\n\tat org.sqlite.core.DB.newSQLException(DB.java:1042)\n\tat org.sqlite.core.DB.execute(DB.java:881)\n\tat org.sqlite.core.DB.executeUpdate(DB.java:922)\n\tat org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:98)\n\tat com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)\n\tat com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)\n\t... 81 common frames omitted\n"
}{
  "timestamp" : "2025-03-21 00:00:12.946",
  "level" : "DEBUG",
  "thread" : "TestGeneration-2",
  "logger" : "org.hibernate.SQL",
  "message" : "\n    /* insert for\n        com.example.model.OperationLog */insert \n    into\n        operation_log (created_at, job_uid, operation, timestamp, uid) \n    values\n        (?, ?, ?, ?, ?)",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.947",
  "level" : "DEBUG",
  "thread" : "TestGeneration-2",
  "logger" : "org.hibernate.SQL",
  "message" : "\n    select\n        last_insert_rowid()",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.948",
  "level" : "DEBUG",
  "thread" : "TestGeneration-2",
  "logger" : "com.example.service.TestGenerationService",
  "message" : "Starting ticket analysis for jobId: 8d6db53b-00fb-4cb8-b96c-b3a03740bfd1",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.948",
  "level" : "INFO",
  "thread" : "TestGeneration-2",
  "logger" : "com.example.agent.TicketAnalyzerAgent",
  "message" : "Starting ticket analysis for ticket: PROJ-123 in project: null",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.948",
  "level" : "DEBUG",
  "thread" : "TestGeneration-2",
  "logger" : "com.example.agent.TicketAnalyzerAgent",
  "message" : "Analyzing ticket content: Implementare la funzionalità di login",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.975",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.hibernate.SQL",
  "message" : "\n    /* <criteria> */ select\n        gj1_0.id,\n        gj1_0.created_at,\n        gj1_0.generated_test_id,\n        gj1_0.status,\n        gj1_0.ticket_content_id,\n        gj1_0.timestamp,\n        gj1_0.uid,\n        gj1_0.updated_at \n    from\n        generation_job gj1_0 \n    where\n        gj1_0.uid=?",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.981",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.example.controller.TestGenerationController",
  "message" : "Checking status for jobId: non-existent-job-id",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:12.984",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.hibernate.SQL",
  "message" : "\n    /* <criteria> */ select\n        gj1_0.id,\n        gj1_0.created_at,\n        gj1_0.generated_test_id,\n        gj1_0.status,\n        gj1_0.ticket_content_id,\n        gj1_0.timestamp,\n        gj1_0.uid,\n        gj1_0.updated_at \n    from\n        generation_job gj1_0 \n    where\n        gj1_0.uid=?",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:35.015",
  "level" : "DEBUG",
  "thread" : "TestGeneration-2",
  "logger" : "com.example.agent.TicketAnalyzerAgent",
  "message" : "Performing detailed ticket analysis",
  "context" : "default"
}{
  "timestamp" : "2025-03-21 00:00:43.023",
  "level" : "INFO",
  "thread" : "SpringApplicationShutdownHook",
  "logger" : "org.springframework.context.support.DefaultLifecycleProcessor",
  "message" : "Shutdown phase 2147483647 ends with 1 bean still running after timeout of 30000ms: [taskExecutor]",
  "context" : "default"
}